[package]
name = "helix-web"
version = "0.1.0"
authors = ["makemeunsee <makemeunsee@gmail.com>"]
edition = "2021"
resolver = "2"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2"
wasm-bindgen-futures = "0.4"
tokio = { version = "1.33", features = ["rt"] }
helix-term = { path = "../helix-term", default-features = false }
helix-tui = { path = "../helix-tui", default-features = false }
helix-view = { path = "../helix-view", default-features = false, features = ["term"] }
helix-core = { path = "../helix-core" }
helix-loader = { path = "../helix-loader" }
console_log = "1.0"
log = "0.4"
futures-util = { version = "0.3", default-features = false }
gloo-timers = { version = "0.3", features = ["futures"] }
js-sys = "0.3"
web-sys = { version = "0.3.39", features = [
    "Document",
    "Element",
    "Window",
] }
rs-xterm-js = { git = "https://github.com/makemeunsee/rs-xterm-js" }
crossterm.workspace = true

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.34"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"

[package.metadata.wasm-pack.profile.release]
# for quicker builds
# wasm-opt = false
