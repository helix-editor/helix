[package]
name = "helix-view"
version = "0.6.0"
authors = ["Bla≈æ Hrastnik <blaz@mxxn.io>"]
edition = "2021"
license = "MPL-2.0"
description = "UI abstractions for use in backends"
categories = ["editor"]
repository = "https://github.com/helix-editor/helix"
homepage = "https://helix-editor.com"

[features]
default = ["dap_lsp", "term", "vcs"]
dap_lsp = ["dep:helix-lsp", "dep:helix-dap"]
term = []
vcs = ["helix-vcs"]

[dependencies]
bitflags = "2.4"
anyhow = "1"
helix-core = { version = "0.6", path = "../helix-core" }
helix-event = { version = "0.6", path = "../helix-event" }
helix-loader = { version = "0.6", path = "../helix-loader" }
helix-lsp = { version = "0.6", path = "../helix-lsp", optional = true }
helix-dap = { version = "0.6", path = "../helix-dap", optional = true }
crossterm.workspace = true
helix-vcs = { version = "0.6", path = "../helix-vcs", optional = true }
futures-executor = "0.3"

# Conversion traits
once_cell = "1.18"
url = "2"

arc-swap = { version = "1.6.0" }

futures-util = { version = "0.3", features = [
    "std",
    "async-await",
], default-features = false }

slotmap = "1"

chardetng = "0.1"

serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
toml = "0.7"
log = "~0.4"

parking_lot = "0.12.1"
tokio-stream = "0.1"

[target.'cfg(target_family = "wasm")'.dependencies]
tokio = { version = "1", features = ["io-util"] }
gloo-timers = { version = "0.3", features = ["futures"] }
wasm-bindgen = "0.2"
instant = { version = "0.1", features = ["wasm-bindgen"] }

[target.'cfg(not(target_family = "wasm"))'.dependencies]
tokio = { version = "1", features = [
    "rt",
    "rt-multi-thread",
    "io-util",
    "io-std",
    "time",
    "process",
    "macros",
    "fs",
    "parking_lot",
] }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
which = "4.4"

[target.'cfg(windows)'.dependencies]
clipboard-win = { version = "4.5", features = ["std"] }

[target.'cfg(unix)'.dependencies]
libc = "0.2"
rustix = { version = "0.38", features = ["fs"] }

# TODO(wasm32) restore?
# [dev-dependencies]
# helix-tui = { path = "../helix-tui" }
