[package]
name = "helix-term"
version = "0.6.0"
description = "A post-modern text editor."
authors = ["Bla≈æ Hrastnik <blaz@mxxn.io>"]
edition = "2021"
license = "MPL-2.0"
categories = ["editor", "command-line-utilities"]
repository = "https://github.com/helix-editor/helix"
homepage = "https://helix-editor.com"
include = ["src/**/*", "README.md"]
default-run = "hx"
rust-version = "1.66"

[features]
default = ["vcs", "git", "dap_lsp"]
dap_lsp = ["dep:helix-lsp", "dep:helix-dap"]
vcs = ["helix-vcs"]
unicode-lines = ["helix-core/unicode-lines"]
integration = []
git = ["helix-vcs/git"]

[[bin]]
name = "hx"
path = "src/main.rs"

[dependencies]
helix-core = { version = "0.6", path = "../helix-core" }
helix-event = { version = "0.6", path = "../helix-event" }
helix-lsp = { version = "0.6", path = "../helix-lsp", optional = true }
helix-dap = { version = "0.6", path = "../helix-dap", optional = true }
helix-vcs = { version = "0.6", path = "../helix-vcs", optional = true, default-features = true }
helix-loader = { version = "0.6", path = "../helix-loader" }
futures-executor = "0.3"

anyhow = "1"
once_cell = "1.18"

crossterm.workspace = true
arc-swap = { version = "1.6.0" }

# Logging
fern = "0.6"
chrono = { version = "0.4", default-features = false, features = ["clock"] }
log = "0.4"

# File picker
nucleo.workspace = true
ignore = "0.4"
# markdown doc rendering
pulldown-cmark = { version = "0.9", default-features = false }
# file type detection
content_inspector = "0.2.4"

# config
toml = "0.7"

serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }

# ripgrep for global search
grep-regex = "0.1.11"
grep-searcher = "0.1.11"

[target.'cfg(target_family = "wasm")'.dependencies]
helix-view = { version = "0.6", path = "../helix-view", default-features = false }
tui = { path = "../helix-tui", package = "helix-tui", default-features = false }
tokio = { version = "1", features = ["rt", "io-util", "time", "macros"] }
instant = { version = "0.1", features = ["wasm-bindgen"] }
futures-util = { version = "0.3", features = [
    "async-await",
], default-features = false }

[target.'cfg(not(target_family = "wasm"))'.dependencies]
helix-view = { version = "0.6", path = "../helix-view", default-features = true }
tui = { path = "../helix-tui", package = "helix-tui", default-features = true }
tokio = { version = "1", features = [
    "rt",
    "rt-multi-thread",
    "io-util",
    "io-std",
    "time",
    "process",
    "macros",
    "fs",
    "parking_lot",
] }
which = "4.4"
signal-hook = "0.3"
tokio-stream = "0.1"
futures-util = { version = "0.3", features = [
    "std",
    "async-await",
], default-features = false }

[target.'cfg(not(any(windows, target_family = "wasm")))'.dependencies] # https://github.com/vorner/signal-hook/issues/100
signal-hook-tokio = { version = "0.3", features = ["futures-v0_3"] }
libc = "0.2.149"

# TODO(wasm32) restore
# [target.'cfg(target_os = "macos")'.dependencies]
# crossterm = { version = "0.27", features = ["event-stream", "use-dev-tty"] }

[target.'cfg(not(target_os = "macos"))'.dependencies]

[build-dependencies]
helix-loader = { version = "0.6", path = "../helix-loader" }

[dev-dependencies]
smallvec = "1.11"
indoc = "2.0.4"
tempfile = "3.8.0"
